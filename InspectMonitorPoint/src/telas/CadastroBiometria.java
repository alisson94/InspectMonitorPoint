/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;


import com.digitalpersona.onetouch.DPFPTemplate;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import monitor.Monitor;
import monitor.MonitorDAO;
import monitor.MonitorTableModel;
import util.LeitorBiometrico;
import util.Util;

/**
 *
 * @author Everton
 */
public class CadastroBiometria extends javax.swing.JFrame {

    MonitorDAO monitorDAO = new MonitorDAO();
    Monitor monitor = new Monitor();
    
    LeitorBiometrico digital = new LeitorBiometrico();
    
    DPFPTemplate templateDigital;
    
    public CadastroBiometria() {
        initComponents();
    }

    private void capturarDigitalMaoDireita() {
        if (jlMaoDireita.getText().equals("Capturada!")) {
            jlMaoDireita.setText("Não capturada");
        }
        DPFPTemplate temp = digital.getTemplate(null, 1);
        byte[] b;
        try {
            b = temp.serialize();
            monitor.setDigitalDireita(b);
            jlMaoDireita.setText("Capturada!");
        } catch (Exception e) {
        }
    }

    private void capturarDigitalMaoEsquerda() {
        if (jlMaoEsquerda.getText().equals("Capturada!")) {
            jlMaoEsquerda.setText("Não capturada");
        }
        DPFPTemplate temp = digital.getTemplate(null, 1);
        byte[] b;
        try {
            b = temp.serialize();
            monitor.setDigitalEsquerda(b);
            jlMaoEsquerda.setText("Capturada!");
        } catch (Exception e) {
        }
    }
    
    public void limparCampos(){
        monitor = new Monitor();
        lbMonitor.setText("SELECIONE UM MONITOR...");
        jlMaoDireita.setText("Não capturada");
        jlMaoEsquerda.setText("Não capturada");
        btnMaoDireita.setEnabled(false);
        btnMaoEsquerda.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        lbMonitor = new javax.swing.JLabel();
        btnMaoDireita = new javax.swing.JButton();
        btnMaoEsquerda = new javax.swing.JButton();
        jlMaoDireita = new javax.swing.JLabel();
        jlMaoEsquerda = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnFoto = new javax.swing.JButton();
        backLa = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logo.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 18, 110, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 100, 90));

        btnAdicionar.setBorder(null);
        btnAdicionar.setContentAreaFilled(false);
        btnAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 245, 38, 38));

        lbMonitor.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbMonitor.setText("SELECIONE UM MONITOR...");
        getContentPane().add(lbMonitor, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 245, 330, 35));

        btnMaoDireita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botaodireita.png"))); // NOI18N
        btnMaoDireita.setBorder(null);
        btnMaoDireita.setContentAreaFilled(false);
        btnMaoDireita.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnMaoDireita.setEnabled(false);
        btnMaoDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaoDireitaActionPerformed(evt);
            }
        });
        getContentPane().add(btnMaoDireita, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 97, 117));

        btnMaoEsquerda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botaoesquerda.png"))); // NOI18N
        btnMaoEsquerda.setBorder(null);
        btnMaoEsquerda.setBorderPainted(false);
        btnMaoEsquerda.setContentAreaFilled(false);
        btnMaoEsquerda.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnMaoEsquerda.setEnabled(false);
        btnMaoEsquerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaoEsquerdaActionPerformed(evt);
            }
        });
        getContentPane().add(btnMaoEsquerda, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 97, 117));

        jlMaoDireita.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlMaoDireita.setText("Não capturada");
        getContentPane().add(jlMaoDireita, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 420, -1, -1));

        jlMaoEsquerda.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlMaoEsquerda.setText("Não capturada");
        getContentPane().add(jlMaoEsquerda, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 420, -1, -1));

        btnVoltar.setBorder(null);
        btnVoltar.setContentAreaFilled(false);
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 485, 100, 30));

        btnLimpar.setBorder(null);
        btnLimpar.setContentAreaFilled(false);
        btnLimpar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 485, 100, 30));

        btnPesquisar.setBorder(null);
        btnPesquisar.setContentAreaFilled(false);
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 485, 100, 30));

        btnSalvar.setBorder(null);
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 485, 100, 30));

        btnFoto.setBorder(null);
        btnFoto.setContentAreaFilled(false);
        btnFoto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(btnFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 243, 110, 140));

        backLa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/TelaCadastroBiometria.jpg"))); // NOI18N
        backLa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(backLa, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if(!lbMonitor.getText().equals("SELECIONE UM MONITOR...")){
            monitorDAO.salvar(monitor);
            limparCampos();
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Monitor primeiro");
        }
            
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnMaoDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaoDireitaActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Peça que por gentileza o professor(a) " + lbMonitor.getText() + "\n\n Escolha um dedo da mão DIREITA que ele gostaria de cadastrar\n\n"
        + "Após a escolha dele clique no OK abaixo para continuar o cadastro da digital");
        capturarDigitalMaoDireita();
    }//GEN-LAST:event_btnMaoDireitaActionPerformed

    private void btnMaoEsquerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaoEsquerdaActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Peça que por gentileza o professor(a) " + lbMonitor.getText() + "\n\n Escolha um dedo da mão ESQUERDA que ele gostaria de cadastrar\n\n"
                + "Após a escolha dele clique no OK abaixo para continuar o cadastro da digital");
        capturarDigitalMaoEsquerda();
    }//GEN-LAST:event_btnMaoEsquerdaActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
         List<Monitor> lista = monitorDAO.listar();
        MonitorTableModel model = new MonitorTableModel(lista);
        Object objetoRetorno = PesquisaGenerica.exibeTela(model, "Monitor");
        if (objetoRetorno != null) {
            monitor = monitorDAO.consultarObjetoId("id", objetoRetorno);
            lbMonitor.setText(monitor.getAluno().getNome());
            try {
                ImageIcon foto = new ImageIcon();
                foto.setImage(Util.byteToImage(monitor.getAluno().getFotoAluno()));
                btnFoto.setIcon(foto);
            } catch (Exception e) {
            }
            if (monitor.getDigitalDireita() != null) {
                jlMaoDireita.setText("Capturada!");
            }
            if (monitor.getDigitalEsquerda() != null) {
                jlMaoEsquerda.setText("Capturada!");
            }
            btnMaoDireita.setEnabled(true);
            btnMaoEsquerda.setEnabled(true);
        }   
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        //System.exit(0);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        List<Monitor> lista = monitorDAO.listar();
        MonitorTableModel model = new MonitorTableModel(lista);
        Object objetoRetorno = PesquisaGenerica.exibeTela(model, "Monitor");
        if (objetoRetorno != null) {
            monitor = monitorDAO.consultarObjetoId("id", objetoRetorno);
            lbMonitor.setText(monitor.getAluno().getNome());
            try {
                ImageIcon foto = new ImageIcon();
                foto.setImage(Util.byteToImage(monitor.getAluno().getFotoAluno()));
                btnFoto.setIcon(foto);
            } catch (Exception e) {
            }
            if (monitor.getDigitalDireita() != null) {
                jlMaoDireita.setText("Capturada!");
            }
            if (monitor.getDigitalEsquerda() != null) {
                jlMaoEsquerda.setText("Capturada!");
            }
            btnMaoDireita.setEnabled(true);
            btnMaoEsquerda.setEnabled(true);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroBiometria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroBiometria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroBiometria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroBiometria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroBiometria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backLa;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnMaoDireita;
    private javax.swing.JButton btnMaoEsquerda;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlMaoDireita;
    private javax.swing.JLabel jlMaoEsquerda;
    private javax.swing.JLabel lbMonitor;
    // End of variables declaration//GEN-END:variables
}
